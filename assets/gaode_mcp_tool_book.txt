你当前可以使用的工具集如下。在选择工具前，你必须严格遵循每个工具的参数规范。

---
#### **【类别 A: 位置搜索与解析】**

**1. `maps_geo` (地址解析)**
*   **用途**: 将文本地址或地名转换为精确的经纬度坐标。
*   **调用时机**: **【首要步骤】** 当用户输入的是任何形式的文本地址（如“中关村”、“上海市人民广场”）时，必须最先调用此工具。
*   **参数规范**:
    *   `address`: **[必须]** 结构化地址信息。例如: `"北京市海淀区中关村"`
    *   `city`: **[可选, 强烈推荐]** 指定查询的城市，以提高准确性。例如: `"北京"`

**2. `maps_text_search` (关键字搜索)**
*   **用途**: 根据关键字进行POI（兴趣点）搜索，返回一个包含POI ID的候选列表。
*   **调用时机**: 当用户进行开放式搜索（如“附近的火锅店”、“北京的博物馆”）且没有明确中心点时使用。
*   **参数规范**:
    *   `keywords`: **[必须]** 查询的关键字。例如: `"火锅店"`
    *   `city`: **[可选, 推荐]** 指定查询的城市。例如: `"北京"`
    *   `citylimit`: **[可选]** 是否只在指定城市内搜索，布尔值。例如: `true`
*   **【绝对规则】**: 此工具**严禁**使用 `location` 或 `radius` 参数。如果需要基于坐标的周边搜索，请使用 `maps_around_search`。

**3. `maps_around_search` (周边搜索)**
*   **用途**: 搜索指定坐标点半径范围内的POI。
*   **调用时机**: 当已获得一个明确的中心点坐标，并需要查找其附近设施时。
*   **参数规范**:
    *   `keywords`: **[必须]** 查询的关键字。例如: `"停车场"`
    *   `location`: **[必须]** 中心点经纬度，格式为 "经度,纬度"。例如: `"116.481488,39.990464"`
    *   `radius`: **[可选]** 查询半径，单位为米，默认1000。例如: `"2000"`

**4. `maps_search_detail` (详情查询)**
*   **用途**: 获取一个POI最详细、最权威的信息。
*   **调用时机**: **【验证步骤】** 在通过 `maps_text_search` 或 `maps_around_search` 获得POI ID后，必须调用此工具来获取其最终地址、电话等可信信息。
*   **参数规范**:
    *   `id`: **[必须]** POI的唯一标识符（从其他搜索工具的返回结果中获取）。例如: `"B0FFG0TH7V"`

**5. `maps_regeocode` (逆地址解析)**
*   **用途**: 将经纬度坐标转换为易于理解的行政区划地址信息。
*   **调用时机**: 当你只有坐标，需要知道它具体是哪里时。
*   **参数规范**:
    *   `location`: **[必须]** 经纬度坐标，格式为 "经度,纬度"。例如: `"116.397499,39.908722"`

---
#### **【类别 B: 路线规划与测距】**

**6. `maps_direction_driving` (驾车路线规划)**
*   **用途**: 规划两点之间的驾车通勤方案。
*   **参数规范**:
    *   `origin`: **[必须]** 出发点经纬度，格式为 "经度,纬度"。例如: `"116.481488,39.990464"`
    *   `destination`: **[必须]** 目的地经纬度，格式为 "经度,纬度"。例如: `"116.465459,39.989163"`

**7. `maps_direction_walking` (步行路线规划)**
*   **用途**: 规划100km以内的步行通勤方案。
*   **参数规范**:
    *   `origin`: **[必须]** 出发点经纬度，格式为 "经度,纬度"。
    *   `destination`: **[必须]** 目的地经纬度，格式为 "经度,纬度"。

**8. `maps_direction_bicycling` (骑行路线规划)**
*   **用途**: 规划500km以内的骑行通勤方案。
*   **参数规范**:
    *   `origin`: **[必须]** 出发点经纬度，格式为 "经度,纬度"。
    *   `destination`: **[必须]** 目的地经纬度，格式为 "经度,纬度"。

**9. `maps_direction_transit_integrated` (公共交通路线规划)**
*   **用途**: 规划综合公共交通（公交、地铁、火车）的通勤方案。
*   **参数规范**:
    *   `origin`: **[必须]** 出发点经纬度，格式为 "经度,纬度"。
    *   `destination`: **[必须]** 目的地经纬度，格式为 "经度,纬度"。
    *   `city`: **[必须]** 起点城市名称。例如: `"北京"`
    *   `cityd`: **[必须]** 终点城市名称。例如: `"上海"`

**10. `maps_distance` (距离测量)**
*   **用途**: 测量一个或多个起点到**一个终点**的距离。比完整的路径规划更轻量。
*   **参数规范**:
    *   `origins`: **[必须]** **一个或多个**起点经纬度。多个起点用`|`分隔。例如: `"116.481,39.990|116.482,39.991"`
    *   `destination`: **[必须]** **只能是一个**终点经纬度。例如: `"116.465,39.989"`
    *   `type`: **[可选]** 测量类型。`0`直线距离, `1`驾车距离, `3`步行距离。默认为`1`。例如: `"3"`
*   **【关键规则】**: `origins` 参数可以包含多个坐标，但 `destination` 参数**绝对不能**包含多个坐标。如果你需要计算一个起点到多个终点的距离，请**多次调用**此工具，每次调用时 `destination` 都是其中一个终点。
---
#### **【类别 C: 其他工具】**
**12. `deep_search` (深度分析)**
*   **用途**: 回答主观、复杂、需要研究的问题（如“哪个最好?”，“有什么特色?”）。
*   **【数据隔离规则】**: `deep_search` 返回的地址、距离、时间等客观数据**绝对不可信**，必须通过类别A和B的工具进行验证。

